name: Build Docs (DOCX + PDF)

on:
  workflow_dispatch:
  push:
    paths:
      - 'docs/**/*.md'
      - '.github/workflows/build-docs.yml'

jobs:
  build-docs:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          # Specs (EN/FA). هر کدوم اگر نبود، اتومات skip می‌شود.
          - md: docs/SPEC-1-LabelGen-EN.md
            base: SPEC-1-LabelGen-EN
            dest: Specs
          - md: docs/SPEC-1-LabelGen-FA.md
            base: SPEC-1-LabelGen-FA
            dest: Specs
          # Runbooks
          - md: docs/runbooks/PAD-Agent.md
            base: Runbook-PAD-Agent
            dest: Runbooks
          - md: docs/runbooks/PAC-Flow.md
            base: Runbook-PAC-Flow
            dest: Runbooks
          # Procedures (SOPs)
          - md: docs/sops/Template-Profiler.md
            base: SOP-Template-Profiler
            dest: Procedures
          # Testing
          - md: docs/testing/Test-Plan.md
            base: Test-Plan
            dest: Testing

    steps:
      - uses: actions/checkout@v4

      - name: Install Pandoc, LibreOffice, and fonts (incl. Persian/Arabic)
        run: |
          sudo apt-get update
          sudo apt-get install -y pandoc libreoffice
          # fonts for unicode + Arabic/Persian
          sudo apt-get install -y fonts-dejavu-core fonts-noto fonts-noto-core fonts-noto-extra || true
          sudo apt-get install -y fonts-noto-naskh-arabic fonts-noto-kufi-arabic || true

      - name: Skip if markdown not present
        id: check
        run: |
          if [ ! -f "${{ matrix.md }}" ]; then
            echo "skip=true" >> $GITHUB_OUTPUT
          fi

      - name: Extract version from MD header (fallback 1.0.0)
        id: ver
        if: steps.check.outputs.skip != 'true'
        shell: bash
        run: |
          v=$(grep -m1 -Eo 'Version:\s*[0-9]+\.[0-9]+\.[0-9]+' "${{ matrix.md }}" | sed -E 's/.*:\s*//')
          if [ -z "$v" ]; then v=1.0.0; fi
          echo "v=$v" >> $GITHUB_OUTPUT

      - name: Build DOCX with Pandoc
        if: steps.check.outputs.skip != 'true'
        run: |
          out="${{ matrix.base }}_v${{ steps.ver.outputs.v }}.docx"
          pandoc "${{ matrix.md }}" -o "$out" --from gfm --toc

      - name: Convert DOCX → PDF (LibreOffice headless)
        if: steps.check.outputs.skip != 'true'
        run: |
          soffice --headless --convert-to pdf "$(pwd)/${{ matrix.base }}_v${{ steps.ver.outputs.v }}.docx" --outdir "$(pwd)"

      - name: Upload as artifact by destination
        if: steps.check.outputs.skip != 'true'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.dest }}   # Specs / Runbooks / Procedures / Testing
          path: |
            ${{ matrix.base }}_v${{ steps.ver.outputs.v }}.docx
            ${{ matrix.base }}_v${{ steps.ver.outputs.v }}.pdf

  # (Optional) Render PlantUML diagrams to PNG/SVG → artifact "Diagrams"
  diagrams:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Generate diagrams (if any)
        run: |
          sudo apt-get update
          sudo apt-get install -y plantuml graphviz || true
          mkdir -p out
          if compgen -G "docs/diagrams/*.puml" > /dev/null; then
            for f in docs/diagrams/*.puml; do
              plantuml -tpng "$f" -o out
              plantuml -tsvg "$f" -o out
            done
          else
            echo "No .puml files found, skipping."
          fi
      - uses: actions/upload-artifact@v4
        with:
          name: Diagrams
          path: out
          if-no-files-found: ignore
